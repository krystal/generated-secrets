name: CI
on: push
jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          command: manifest
      - if: ${{ steps.release-please.outputs.release_created }}
        id: version
        name: Get raw version value from tag
        run: |-
          TAG="${{ steps.release-please.outputs.tag_name }}"
          echo "version=${TAG/v/}" >> $GITHUB_OUTPUT

  build:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: [release-please]
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          make save-manifests docker-build docker-push IMG=ghcr.io/krystal/generated-secrets:${{ needs.release-please.outputs.version }}
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ needs.release-please.outputs.tag_name }} manifest.yaml
  publish-chart:
    name: Publish Helm Chart
    runs-on: [self-hosted, cluster]
    needs: [build]
    steps:
      - uses: azure/setup-helm@v3
        with:
          version: "latest"
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          helm registry login '${{ vars.KRYSTAL_REGISTRY_HOST }}' \
            --username '${{ vars.KRYSTAL_REGISTRY_USERNAME }}' \
            --password '${{ secrets.KRYSTAL_REGISTRY_PASSWORD }}'
      - uses: actions/checkout@v3
      - run: |
          helm package ./chart/
          helm push genered-secrets-*.tgz \
            'oci://${{ vars.KRYSTAL_REGISTRY_HOST }}/kubernetes/charts'  